package gestInscri.utils;

import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import gestInscri.models.entity.Candidat;
import gestInscri.models.entity.Enseignant;
import gestInscri.models.entity.Entretien;

public class SendMail {

	public SendMail() {

	}

	public void defaultMail(String reciver, String subject, String messageText) {
		// Put recipient’s address
		String to = reciver;

		// Put sender’s address
		String from = "no-replay@gestincri.com";
		final String username = "354354ff870cba";// username generated by Mailtrap
		final String password = "f3b9dc26bb3447";// password generated by Mailtrap

		// Paste host address from the SMTP settings tab in your Mailtrap Inbox
		String host = "smtp.mailtrap.io";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");// it’s optional in
														// Mailtrap
		props.put("mail.smtp.host", host);
		props.put("mail.smtp.port", "2525");// use one of the options in the
											// SMTP settings tab in your
											// Mailtrap Inbox

		// Get the Session object.
		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		});

		try {
			// Create a default MimeMessage object.
			Message message = new MimeMessage(session);

			// Set From: header field
			message.setFrom(new InternetAddress(from));

			// Set To: header field
			message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));

			// Set Subject: header field
			message.setSubject(subject);

			// Put the content of your message
			message.setText(messageText);

			// Send message
			Transport.send(message);

			System.out.println("Sent message successfully....");

		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}
	}
	
	public void sendEnseignantMail(Enseignant enseignant){
		String message = "Vous avez un nouveau dossier à traiter.\nS.V.P, vérifier ce dossier";
		this.defaultMail(enseignant.getUser().getMail(), "Nouveau dossier est affecté pour vous", message);		
	}
	
	public void sendCandidatRefusMail(Candidat candidat){
		String message = "Nous excuse, votre dossier est insuffisant, vous n'est pas accepter";
		this.defaultMail(candidat.getUser().getMail(), "IPSAS: Dossier refuser", message);		
	}
	
	public void sendEntretienMail(Entretien entretien){
		String message = entretien.getEnseignant().getUser().getFullName()+" vous invite a un entretien "+entretien.getDateEntretien();
		this.defaultMail(entretien.getCandidat().getUser().getMail(), "IPSAS: Entretien", message);	
	}
	
	
}
